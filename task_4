# В работе с docker я придерживаюсь правила использования конкретного образа (1.они точно стабильнее, чем latest; 2. Образ latest со временем изменится - могут возникнуть какие-то проблемы в более сложных Dockerfile, поскольку он будет заточен под "старый" базовый образ)
FROM ubuntu:22.04

# Однако если идея именно в latest, то просто оставляем FROM ubuntu:latest

# Устанавливаем зависимости одним RUN для уменьшения слоев ( а также уменьшения объёма всего образа, поскольку директива RUN на него влияет), также подчищаем кэш, что уменьшит размер образа
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Копируем все файлы за одну операцию (на размер образа не повлияет, но просто так приятнее - скопировать все нужные файлы сразу, а не записывать их 3 раза в одну и ту же директорию)
# Если первоначальный образ был просто обобщением для 2 скриптов, то избавляемся здесь и далее от python-скрипта, а из CMD в ENTRYPOINT (будет написана перед CMD) помещаем /tmp/script.sh
COPY script.sh extract_path_value.py config.txt /tmp/

# Устанавливаем права и делаем скрипты исполняемыми
RUN chmod +x /tmp/script.sh /tmp/extract_path_value.py

# Устанавливаем рабочую директорию, в которой начнёт работу контейнер с образом
WORKDIR /tmp

# Запускаем script.sh с параметрами по умолчанию.  Можно заменить при старте контейнера на python-скрипт и/или поменять аргументы для скрипта
CMD ["/tmp/script.sh", "config.txt", "path"]
